---
title: "Summarize Peptide Level Measurements"
author: "WEW@FGCZ.ETHZ.CH"
date: "`r Sys.Date()`"
output:
  pdf_document: default
  html_document: default
params:
  configuration:  !r quote(LFQService::skylineconfig)
  data: !r quote(LFQService::sample_analysis)
vignette: >
  %\VignetteIndexEntry{Summarize Peptide Level Measurements}
  %\VignetteEncoding{UTF-8}
  %\VignetteEngine{knitr::rmarkdown}
editor_options:
  chunk_output_type: console
---



```{r setup, include=FALSE}
library(tidyverse)
library(LFQService)

knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning = FALSE)
data <- eval(params$data)
config <- eval(params$configuration)
old <- theme_set(theme_classic())
```

## Summarize levels

```{r hierarchyCounts}
x <- hierarchyCounts( data , config )
knitr::kable(data.frame(NR = x), caption="summary")

```


```{r proteinSummaries, fig.width=3,fig.height=3}
data <- LFQService::remove_small_intensities(data, config)
data <- LFQService::completeCases(data,config)

x3 <- summarizeHierarchy(data, config)
x3 <- x3 %>% mutate(protein_with = case_when(peptide_Id_n == 1 ~ "one",
                                        peptide_Id_n > 1 ~ "two and more"))

res <- x3 %>% group_by(protein_with) %>% summarize(n=n())
knitr::kable(res)
ggplot(x3, aes(x = protein_with)) + geom_bar(stat="count")
```

```{r}
x3 %>% filter(peptide_Id_n > 1) -> x4

data <- inner_join(data, x4, by="protein_Id")
```


```{r missingFigIntensityHistorgram, fig.width=8,fig.height=9,dpi=300}
p <-missignessHistogram(data, config)
xx1 <- missingPerCondition(data, config)
xx2 <- missingPerConditionCumsum(data, config)
gridExtra::grid.arrange(p, xx1$figure, xx2$figure)
```




# Intensity distribution

## Analysing CV

```{r fig.cap="sd vs mean", fig.width=8,fig.height=9,dpi=300}
stats_res <- summarize_cv(data, config)
p0 <-plot_stdv_vs_mean(stats_res, config)  + labs(tag='A')

p1 <- LFQService::plot_stat_violin(stats_res, config, stat="CV") + labs(tag='B')
p2 <- LFQService::plot_stat_violin_median(stats_res, config, stat="CV") + labs(tag='C')
gridExtra::grid.arrange(p0,p1,p2)

```

## Intensity Distributions

```{r intensityDistribution, fig.cap="not normalized intensity distribution.", fig.width=8,fig.height=9,dpi=300}
p0 <- LFQService::plot_intensity_distribution_density(data,config)
p1 <- LFQService::plot_intensity_distribution_violin(data,config)
gridExtra::grid.arrange(p0,p1)

```

# Transformed Intensity Distribution

```{r}
dataTransformed <- LFQService::applyToIntensityMatrix(data, config, vsn::justvsn)

```


## Analysing standard deviation

```{r fig.cap="sd vs mean", fig.width=8, fig.height=8}
stats_res <- summarize_cv(dataTransformed, config)
p0 <- plot_stdv_vs_mean(stats_res, config) + labs(tag="A")
p1 <- LFQService::plot_stat_violin(stats_res, config, stat="sd")+ labs(tag = "B")
p2 <- LFQService::plot_stat_violin_median(stats_res, config, stat="sd") + labs(tag = "C")
gridExtra::grid.arrange(p0,p1,p2)
```


```{r transformed_stat_sd_density, fig.cap="Distribution of sd"}
p1 <- LFQService::plot_stat_density(stats_res, config, stat="sd") + labs(tag = "A")
p2 <- LFQService::plot_stat_density_median(stats_res, config, stat="sd") + labs(tag = "B")
gridExtra::grid.arrange(p1,p2)
```

## Transformed Intensity Distributions

```{r, fig.width=8, fig.height=8}
p1 <- LFQService::plot_intensity_distribution_density(dataTransformed,config) + labs(tag= "A")
p2 <- LFQService::plot_intensity_distribution_violin(dataTransformed,config) + labs(tag="B")
gridExtra::grid.arrange(p1,p2)
```

# Sample correlations

```{r correlationHeat, fig.width=8, fig.height=8}
plot_heatmap_cor(dataTransformed,config)
config$table$factorKeys()

```

```{r overviewHeat, fig.with =8, fig.height=8}
plot_heatmap(dataTransformed,config)
```





