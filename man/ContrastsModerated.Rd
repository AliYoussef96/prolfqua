% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyMS_R6Contrast.R
\name{ContrastsModerated}
\alias{ContrastsModerated}
\title{Limma moderated contrasts}
\description{
Limma moderated contrasts

Limma moderated contrasts
}
\examples{

library(LFQService)
istar <- LFQService::ionstar$normalized()
istar_data <- dplyr::filter(istar$data ,protein_Id \%in\% sample(protein_Id, 100))
modelFunction <-
  make_custom_model_lmer("transformedIntensity  ~ dilution. + (1 | peptide_Id) + (1|sampleName)")
pepIntensity <- istar_data
config <- istar$config$clone(deep = TRUE)
config$table$hkeysDepth()
mod <- build_model(
 pepIntensity,
 modelFunction,
 subject_Id = config$table$hkeysDepth())

 Contr <- c("dil.b_vs_a" = "dilution.a - dilution.b")
 contrast <- LFQService::ContrastsModerated$new(mod,
 Contr)
 contrast$get_contrasts(all = TRUE)
 plotter <- contrast$get_Plotter()
 plotter$histogram()
 plotter$ma_plot()
 plotter$volcano()

}
\seealso{
\code{\link{moderated_p_limma_long}}

Other modelling: 
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsSimpleImpute}},
\code{\link{Contrasts_Plotter}},
\code{\link{Contrasts}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_model_coefficients}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{make_custom_model_glm}()},
\code{\link{make_custom_model_lmer}()},
\code{\link{make_custom_model_lm}()},
\code{\link{model_analyse}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{moderated_p_limma}()},
\code{\link{ms_brms_model}()},
\code{\link{ms_mcmc_checkzero}()},
\code{\link{ms_mcmc_constrast}()},
\code{\link{my_contest}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_contrast}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data_TWO}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom_TWO}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{summary_ROPECA_median_p.scaled}()}
}
\concept{modelling}
\section{Super class}{
\code{\link[LFQService:Contrast]{LFQService::Contrast}} -> \code{ContrastsModerated}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-get_contrasts}{\code{ContrastsModerated$get_contrasts()}}
\item \href{#method-get_Plotter}{\code{ContrastsModerated$get_Plotter()}}
\item \href{#method-to_wide}{\code{ContrastsModerated$to_wide()}}
\item \href{#method-clone}{\code{ContrastsModerated$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="LFQService" data-topic="Contrast" data-id="get_contrasts_sides">}\href{../../LFQService/html/Contrast.html#method-get_contrasts_sides}{\code{LFQService::Contrast$get_contrasts_sides()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="LFQService" data-topic="Contrast" data-id="get_linfct">}\href{../../LFQService/html/Contrast.html#method-get_linfct}{\code{LFQService::Contrast$get_linfct()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="LFQService" data-topic="Contrast" data-id="initialize">}\href{../../LFQService/html/Contrast.html#method-initialize}{\code{LFQService::Contrast$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="LFQService" data-topic="Contrast" data-id="write">}\href{../../LFQService/html/Contrast.html#method-write}{\code{LFQService::Contrast$write()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
applies limma moderation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_contrasts(all = FALSE, global = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{should all columns be returned (default FALSE)}

\item{\code{global}}{use a global linear function (determined by get_linfct)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
get \code{\link{Contrast_Plotter}}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_Plotter()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
convert to wide format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$to_wide(columns = c("moderated.p.value", "FDR.moderated"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{value column default moderated.p.value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
