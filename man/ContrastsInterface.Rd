% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyMS_R6Contrast.R
\name{ContrastsInterface}
\alias{ContrastsInterface}
\alias{ContrastsSimpleImpute}
\alias{Contrasts}
\alias{ContrastsModerated}
\alias{addContrastResults}
\title{ContrastsInterface}
\usage{
addContrastResults(prefer, add, modelName = "mergedModel")
}
\arguments{
\item{prefer}{contrasts to use preferentially}

\item{add}{contrasts to add from if missing in prefer}

\item{modelName}{name of the merged model default "mergedModel"}
}
\description{
ContrastsInterface

ContrastsInterface

Compute contrasts with group mean imputation (directly from data)

Compute contrasts with group mean imputation (directly from data)

Estimate contrasts using Wald Test

Estimate contrasts using Wald Test

Limma moderated contrasts

Limma moderated contrasts

add contrast results from two different functions. Tipically used with Contrast and Cotnrast simple imputed.
}
\details{
If there are no observations in one of the groups for some of the proteins,
the group mean cannot be estimated. Therefore, assuming that the observation
is missing because the protein abundance is below the detection limit,
we substitute the unobserved group mean with the mean of X% smallest
group averages of all the proteins.
If the observations present in the other group allow us to estimate
the variance of the measurement for that protein,
we compute the t-statistic, p-value, and FDR.
}
\examples{




# Fitting mixed effects model to peptide data
istar <- prolfqua_data('data_ionstar')$normalized()
istar_data <- dplyr::filter(istar$data ,protein_Id \%in\% sample(protein_Id, 20))

modelFunction <-
strategy_lmer("transformedIntensity  ~ dilution. + (1 | peptide_Id) + (1 | sampleName)")

config <- istar$config
config$table$hkeysDepth()

mod <- build_model(
 istar$data,
 modelFunction,
 subject_Id = config$table$hkeysDepth())

 Contr <- c("dil.a_vs_b" = "dilution.a - dilution.b",
    "dil.e_vs_b" = "dilution.e - dilution.b" )
contrastX <- prolfqua::Contrasts$new(mod, Contr)
contrastX$get_contrasts()
contrastX$column_description()


istar <- prolfqua_data('data_ionstar')$normalized()
istar_data <- dplyr::filter(istar$data ,protein_Id \%in\% sample(protein_Id, 100))
pepIntensity <- istar_data
config <- istar$config$clone(deep = TRUE)


ld <- LFQData$new(pepIntensity, config)
lProt <- ld$get_Aggregator()$medpolish()
lProt$rename_response("transformedIntensity")
modelFunction <-
  strategy_lm("transformedIntensity  ~ dilution.")
mod <- build_model(
 lProt,
 modelFunction)

Contr <- c("dil.b_vs_a" = "dilution.a - dilution.b")
contrast <- prolfqua::Contrasts$new(mod,
 Contr)
contrast <- ContrastsModerated$new(contrast)
bb <- contrast$get_contrasts()

csi <- ContrastsSimpleImpute$new(lProt, contrasts = Contr)

csi$get_contrasts()
contrast$get_contrasts()

merged <- addContrastResults(contrast, csi)
merged$more$get_contrasts() |> dim()
merged$merged$get_contrasts() |> dim()
merged$same$get_contrasts() |> dim()

cs <- contrast$get_contrast_sides()
cslf <- contrast$get_linfct()
ctr <- contrast$get_contrasts()
ctrwide <- contrast$to_wide()
cp <- contrast$get_Plotter()
cp$histogram()
cp$volcano()
cp$ma_plot()



}
\seealso{
\code{\link{moderated_p_limma_long}}

Other modelling: 
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsSaintExpress}},
\code{\link{ContrastsTable}},
\code{\link{Contrasts_Plotter}},
\code{\link{Contrasts_proDA}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_model_coefficients}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{modelSummary}()},
\code{\link{model_analyse}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{moderated_p_limma}()},
\code{\link{my_contest}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_contrast}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data_TWO}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom_TWO}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{strategy_lmer}()},
\code{\link{summary_ROPECA_median_p.scaled}()}

Other modelling: 
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsSaintExpress}},
\code{\link{ContrastsTable}},
\code{\link{Contrasts_Plotter}},
\code{\link{Contrasts_proDA}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_model_coefficients}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{modelSummary}()},
\code{\link{model_analyse}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{moderated_p_limma}()},
\code{\link{my_contest}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_contrast}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data_TWO}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom_TWO}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{strategy_lmer}()},
\code{\link{summary_ROPECA_median_p.scaled}()}

Other modelling: 
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsSaintExpress}},
\code{\link{ContrastsTable}},
\code{\link{Contrasts_Plotter}},
\code{\link{Contrasts_proDA}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_model_coefficients}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{modelSummary}()},
\code{\link{model_analyse}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{moderated_p_limma}()},
\code{\link{my_contest}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_contrast}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data_TWO}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom_TWO}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{strategy_lmer}()},
\code{\link{summary_ROPECA_median_p.scaled}()}

Other modelling: 
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsSaintExpress}},
\code{\link{ContrastsTable}},
\code{\link{Contrasts_Plotter}},
\code{\link{Contrasts_proDA}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_model_coefficients}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{modelSummary}()},
\code{\link{model_analyse}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{moderated_p_limma}()},
\code{\link{my_contest}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_contrast}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data_TWO}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom_TWO}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{strategy_lmer}()},
\code{\link{summary_ROPECA_median_p.scaled}()}
}
\concept{modelling}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-get_contrast_sides}{\code{ContrastsInterface$get_contrast_sides()}}
\item \href{#method-get_contrasts}{\code{ContrastsInterface$get_contrasts()}}
\item \href{#method-get_Plotter}{\code{ContrastsInterface$get_Plotter()}}
\item \href{#method-to_wide}{\code{ContrastsInterface$to_wide()}}
\item \href{#method-column_description}{\code{ContrastsInterface$column_description()}}
\item \href{#method-clone}{\code{ContrastsInterface$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrast_sides"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrast_sides}{}}}
\subsection{Method \code{get_contrast_sides()}}{
get table with sides of the contrast
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$get_contrast_sides()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
get table with contrast results (similar to limma topTable function)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$get_contrasts()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
initialize plotter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$get_Plotter()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
create wide representation of data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$to_wide()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-column_description"></a>}}
\if{latex}{\out{\hypertarget{method-column_description}{}}}
\subsection{Method \code{column_description()}}{
column description
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$column_description()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsInterface$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[prolfqua:ContrastsInterface]{prolfqua::ContrastsInterface}} -> \code{ContrastsSimpleImpute}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{subject_Id}}{subject_id e.g. protein_ID column}

\item{\code{contrasts}}{array with contrasts (see example)}

\item{\code{modelName}}{model name}

\item{\code{contrast_result}}{data frame with results of contrast computation}

\item{\code{lfqdata}}{data frame}

\item{\code{confint}}{confidence interval}

\item{\code{p.adjust}}{function to adjust p-values}

\item{\code{global}}{Take global or local values for imputation}

\item{\code{present}}{default 1, presence in interaction to infer limit of detection.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ContrastsSimpleImpute$new()}}
\item \href{#method-get_contrast_sides}{\code{ContrastsSimpleImpute$get_contrast_sides()}}
\item \href{#method-get_contrasts}{\code{ContrastsSimpleImpute$get_contrasts()}}
\item \href{#method-get_Plotter}{\code{ContrastsSimpleImpute$get_Plotter()}}
\item \href{#method-to_wide}{\code{ContrastsSimpleImpute$to_wide()}}
\item \href{#method-clone}{\code{ContrastsSimpleImpute$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="prolfqua" data-topic="ContrastsInterface" data-id="column_description">}\href{../../prolfqua/html/ContrastsInterface.html#method-column_description}{\code{prolfqua::ContrastsInterface$column_description()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$new(
  lfqdata,
  contrasts,
  confint = 0.95,
  p.adjust = prolfqua::adjust_p_values,
  modelName = "groupAverage",
  method = "V1",
  global = TRUE,
  present = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lfqdata}}{LFQData}

\item{\code{contrasts}}{array of contrasts (see example)}

\item{\code{confint}}{confidence interval}

\item{\code{p.adjust}}{method for p-value adjustment - default Benjamini Hochberg}

\item{\code{modelName}}{default "groupAverage"}

\item{\code{method}}{internal default V1}

\item{\code{global}}{default TRUE use all or per condition data to impute from}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrast_sides"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrast_sides}{}}}
\subsection{Method \code{get_contrast_sides()}}{
get contrasts sides
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$get_contrast_sides()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
table with results of contrast computation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$get_contrasts(all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{FALSE, do not show all columns (default)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
get Contrasts_Plotter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$get_Plotter()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Contrast_Plotter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
convert contrast results to wide format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$to_wide(columns = c("p.value", "FDR"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{value column default p.value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsSimpleImpute$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[prolfqua:ContrastsInterface]{prolfqua::ContrastsInterface}} -> \code{Contrast}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{models}}{Model}

\item{\code{contrasts}}{character with contrasts}

\item{\code{contrastfun}}{function to compute contrasts}

\item{\code{modelName}}{model name}

\item{\code{subject_Id}}{name of column containing e.g., protein Id's}

\item{\code{p.adjust}}{function to adjust p-values (default prolfqua::adjust_p_values)}

\item{\code{contrast_result}}{data frame containing results of contrast computation}

\item{\code{global}}{use a global linear function (determined by get_linfct)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Contrasts$new()}}
\item \href{#method-get_contrast_sides}{\code{Contrasts$get_contrast_sides()}}
\item \href{#method-get_linfct}{\code{Contrasts$get_linfct()}}
\item \href{#method-get_contrasts}{\code{Contrasts$get_contrasts()}}
\item \href{#method-get_Plotter}{\code{Contrasts$get_Plotter()}}
\item \href{#method-to_wide}{\code{Contrasts$to_wide()}}
\item \href{#method-clone}{\code{Contrasts$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="prolfqua" data-topic="ContrastsInterface" data-id="column_description">}\href{../../prolfqua/html/ContrastsInterface.html#method-column_description}{\code{prolfqua::ContrastsInterface$column_description()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialize
create Contrast
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$new(
  model,
  contrasts,
  p.adjust = prolfqua::adjust_p_values,
  global = TRUE,
  modelName = "WaldTest"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{a dataframe with a structure similar to that generated by \code{\link{build_model}}}

\item{\code{contrasts}}{a character vector with contrast specificiation}

\item{\code{p.adjust}}{function to adjust the p-values}

\item{\code{global}}{development/internal argument (if FALSE determine linfct for each model.)}

\item{\code{modelName}}{name of contrast method, default WaldTest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrast_sides"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrast_sides}{}}}
\subsection{Method \code{get_contrast_sides()}}{
get both sides of contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_contrast_sides()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_linfct"></a>}}
\if{latex}{\out{\hypertarget{method-get_linfct}{}}}
\subsection{Method \code{get_linfct()}}{
get linear functions from contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_linfct(global = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{global}}{logical TRUE - get the a linear functions for all models, FALSE - linear function for each model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
get table with contrast estimates
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_contrasts(all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{should all columns be returned (default FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame with contrasts
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
return \code{\link{Contrasts_Plotter}}
creates Contrast_Plotter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_Plotter(FCthreshold = 1, FDRthreshold = 0.1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{FCthreshold}}{fold change threshold to show in plots}

\item{\code{FDRthreshold}}{FDR threshold to show in plots}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{\link{Contrasts_Plotter}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
convert to wide format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$to_wide(columns = c("p.value", "FDR"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{value column default p.value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[prolfqua:ContrastsInterface]{prolfqua::ContrastsInterface}} -> \code{ContrastsModerated}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{Contrast}}{Class implementing the Contrast interface}

\item{\code{modelName}}{name of model}

\item{\code{subject_Id}}{columns with subject_Id (proteinID)}

\item{\code{p.adjust}}{function to adjust p-values}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ContrastsModerated$new()}}
\item \href{#method-get_contrast_sides}{\code{ContrastsModerated$get_contrast_sides()}}
\item \href{#method-get_linfct}{\code{ContrastsModerated$get_linfct()}}
\item \href{#method-get_contrasts}{\code{ContrastsModerated$get_contrasts()}}
\item \href{#method-get_Plotter}{\code{ContrastsModerated$get_Plotter()}}
\item \href{#method-to_wide}{\code{ContrastsModerated$to_wide()}}
\item \href{#method-clone}{\code{ContrastsModerated$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="prolfqua" data-topic="ContrastsInterface" data-id="column_description">}\href{../../prolfqua/html/ContrastsInterface.html#method-column_description}{\code{prolfqua::ContrastsInterface$column_description()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$new(
  Contrast,
  modelName = paste0(Contrast$modelName, "_moderated"),
  p.adjust = prolfqua::adjust_p_values
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Contrast}}{class implementing the ContrastInterface}

\item{\code{modelName}}{name of the model}

\item{\code{p.adjust}}{function to adjust p-values - default BH}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrast_sides"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrast_sides}{}}}
\subsection{Method \code{get_contrast_sides()}}{
get both sides of contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_contrast_sides()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_linfct"></a>}}
\if{latex}{\out{\hypertarget{method-get_linfct}{}}}
\subsection{Method \code{get_linfct()}}{
get linear functions from contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_linfct(global = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{global}}{logical TRUE - get the a linear functions for all models, FALSE - linear function for each model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
applies limma moderation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_contrasts(all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{should all columns be returned (default FALSE)}

\item{\code{global}}{use a global linear function (determined by get_linfct)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
get \code{\link{Contrasts_Plotter}}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$get_Plotter(FCthreshold = 1, FDRthreshold = 0.1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{FCthreshold}}{fold change threshold to show in plots}

\item{\code{FDRthreshold}}{FDR threshold to show in plots}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
convert to wide format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$to_wide(columns = c("p.value", "FDR"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{value column default moderated.p.value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContrastsModerated$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
